{"version":3,"sources":["../node_modules/@ant-design/icons-svg/es/asn/MailOutlined.js","../node_modules/@ant-design/icons/es/icons/MailOutlined.js","views/auth-views/authentication/forgot-password/index.tsx"],"names":["props","ref","AntdIcon","Object","assign","icon","displayName","backgroundStyle","backgroundImage","process","backgroundRepeat","backgroundSize","connect","Form","useForm","form","useState","loading","setLoading","onSend","a","email","setTimeout","AuthService","ResetPassword","then","data","ErrorCode","resetFields","message","success","content","TranslateText","NEW_PASSWORD","key","className","style","justify","xs","sm","md","lg","src","alt","id","layout","name","onFinish","Item","rules","required","type","placeholder","prefix","htmlType","block","to"],"mappings":"0IAkBe,EAjBI,CACjB,KAAQ,CACN,IAAO,MACP,MAAS,CACP,QAAW,gBACX,UAAa,SAEf,SAAY,CAAC,CACX,IAAO,OACP,MAAS,CACP,EAAK,uVAIX,KAAQ,OACR,MAAS,Y,QCVP,EAAe,SAAsBA,EAAOC,GAC9C,OAAO,gBAAoBC,EAAA,EAAUC,OAAOC,OAAO,GAAIJ,EAAO,CAC5DC,IAAKA,EACLI,KAAM,MAIV,EAAaC,YAAc,eACZ,iBAAiB,I,mNCJ1BC,EAAkB,CACtBC,gBAAgB,OAAD,OAASC,oBAAT,2BACfC,iBAAkB,YAClBC,eAAgB,SAyGHC,sBAAQ,KAAM,KAAdA,EAtGQ,WAAO,IAAD,EACZC,IAAKC,UAAbC,EADoB,sBAEGC,oBAAS,GAFZ,mBAEpBC,EAFoB,KAEXC,EAFW,KAIrBC,EAAM,uCAAG,6BAAAC,EAAA,sDAASC,EAAT,EAASA,MACtBH,GAAW,GACXI,WAAU,sBAAC,sBAAAF,EAAA,6DACTF,GAAW,GADF,mBAEF,IAAIK,KAAcC,cAAcH,GAAOI,MAAK,SAACC,GAC3B,IAAnBA,EAAKC,YACPZ,EAAKa,cACLC,IAAQC,QAAQ,CACdC,QAASC,YAAcC,KACvBC,IAAK,mBAPF,2CAWR,MAbU,2CAAH,sDAgBZ,OACE,yBAAKC,UAAU,QAAQC,MAAO7B,GAC5B,yBAAK4B,UAAU,6DACb,kBAAC,IAAD,CAAKE,QAAQ,UACX,kBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC/B,kBAAC,IAAD,KACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,eACb,yBACEA,UAAU,YACVO,IAAKjC,yCACLkC,IAAI,KAEN,wBAAIR,UAAU,yBACZ,kBAAC,IAAD,CAAaS,GAAI,yBAEnB,uBAAGT,UAAU,QACX,kBAAC,IAAD,CAAaS,GAAI,iCAGrB,kBAAC,IAAD,CAAKP,QAAQ,UACX,kBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC/B,kBAAC,IAAD,CACE1B,KAAMA,EACN8B,OAAO,WACPC,KAAK,kBACLC,SAAU5B,GAEV,kBAAC,IAAK6B,KAAN,CACEF,KAAK,QACLG,MAAO,CACL,CACEC,UAAU,EACVrB,QACE,kBAAC,IAAD,CAAae,GAAI,6BAGrB,CACEO,KAAM,QACNtB,QACE,kBAAC,IAAD,CACEe,GAAI,oCAMZ,kBAAC,IAAD,CACEQ,YAAY,gBACZC,OAAQ,kBAAC,IAAD,CAAclB,UAAU,oBAGpC,kBAAC,IAAKa,KAAN,KACE,kBAAC,IAAD,CACE/B,QAASA,EACTkC,KAAK,UACLG,SAAS,SACTC,OAAK,GAEJ,IACAtC,EACC,kBAAC,IAAD,CAAa2B,GAAI,iBAEjB,kBAAC,IAAD,CAAaA,GAAI,gBAIvB,kBAAC,IAAD,CAASY,GAAI,cACX,kBAAC,IAAD,CAAaZ,GAAI","file":"static/js/27.3791fb30.chunk.js","sourcesContent":["// This icon file is generated automatically.\nvar MailOutlined = {\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 110.8V792H136V270.8l-27.6-21.5 39.3-50.5 42.8 33.3h643.1l42.8-33.3 39.3 50.5-27.7 21.5zM833.6 232L512 482 190.4 232l-42.8-33.3-39.3 50.5 27.6 21.5 341.6 265.6a55.99 55.99 0 0068.7 0L888 270.8l27.6-21.5-39.3-50.5-42.7 33.2z\"\n      }\n    }]\n  },\n  \"name\": \"mail\",\n  \"theme\": \"outlined\"\n};\nexport default MailOutlined;","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MailOutlinedSvg from \"@ant-design/icons-svg/es/asn/MailOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar MailOutlined = function MailOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: MailOutlinedSvg\n  }));\n};\n\nMailOutlined.displayName = 'MailOutlined';\nexport default React.forwardRef(MailOutlined);","import React, { useState } from \"react\";\nimport { Card, Row, Col, Form, Input, Button, message } from \"antd\";\nimport { MailOutlined } from \"@ant-design/icons\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport IntlMessage from \"../../../../components/util-components/IntlMessage\";\nimport { AuthService } from \"../../../../api\";\nimport { NEW_PASSWORD } from \"../../../../constants/Messages\";\nimport TranslateText from \"../../../../utils/translate\";\n\nconst backgroundStyle = {\n  backgroundImage: `url(${process.env.PUBLIC_URL}/img/others/img-17.jpg)`,\n  backgroundRepeat: \"no-repeat\",\n  backgroundSize: \"cover\",\n};\n\nconst ForgotPassword = () => {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n\n  const onSend = async ({ email }: any) => {\n    setLoading(true);\n    setTimeout(async () => {\n      setLoading(false);\n      return new AuthService().ResetPassword(email).then((data: any) => {\n        if (data.ErrorCode === 0) {\n          form.resetFields();\n          message.success({\n            content: TranslateText(NEW_PASSWORD),\n            key: \"updatable\",\n          });\n        }\n      });\n    }, 1500);\n  };\n\n  return (\n    <div className=\"h-100\" style={backgroundStyle}>\n      <div className=\"container d-flex flex-column justify-content-center h-100\">\n        <Row justify=\"center\">\n          <Col xs={20} sm={20} md={20} lg={9}>\n            <Card>\n              <div className=\"my-2\">\n                <div className=\"text-center\">\n                  <img\n                    className=\"img-fluid\"\n                    src={process.env.PUBLIC_URL + \"/img/is-logo-dark.png\"}\n                    alt=\"\"\n                  />\n                  <h3 className=\"mt-3 font-weight-bold\">\n                    <IntlMessage id={\"auth.ForgotPassword\"} />\n                  </h3>\n                  <p className=\"mb-4\">\n                    <IntlMessage id={\"auth.ForgotPasswordMessage\"} />\n                  </p>\n                </div>\n                <Row justify=\"center\">\n                  <Col xs={24} sm={24} md={20} lg={20}>\n                    <Form\n                      form={form}\n                      layout=\"vertical\"\n                      name=\"forget-password\"\n                      onFinish={onSend}\n                    >\n                      <Form.Item\n                        name=\"email\"\n                        rules={[\n                          {\n                            required: true,\n                            message: (\n                              <IntlMessage id={\"auth.MessageInsertEmail\"} />\n                            ),\n                          },\n                          {\n                            type: \"email\",\n                            message: (\n                              <IntlMessage\n                                id={\"auth.MessageInsertValidEmail\"}\n                              />\n                            ),\n                          },\n                        ]}\n                      >\n                        <Input\n                          placeholder=\"Email Address\"\n                          prefix={<MailOutlined className=\"text-primary\" />}\n                        />\n                      </Form.Item>\n                      <Form.Item>\n                        <Button\n                          loading={loading}\n                          type=\"primary\"\n                          htmlType=\"submit\"\n                          block\n                        >\n                          {\" \"}\n                          {loading ? (\n                            <IntlMessage id={\"auth.Sending\"} />\n                          ) : (\n                            <IntlMessage id={\"auth.Send\"} />\n                          )}\n                        </Button>\n                      </Form.Item>\n                      <NavLink to={\"auth/login\"}>\n                        <IntlMessage id={\"auth.GoBack\"} />\n                      </NavLink>\n                    </Form>\n                  </Col>\n                </Row>\n              </div>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(null, null)(ForgotPassword);\n"],"sourceRoot":""}